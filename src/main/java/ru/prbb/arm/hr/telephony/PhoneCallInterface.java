package ru.prbb.arm.hr.telephony;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.BindingType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "phone_callInterface", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PhoneCallInterface {


    /**
     * Осуществляет телефонный звонок.
     * 				Использует тип CallRequest описывающий телефонный звонок.
     * 				Поле From - внутренний номер абонента, тот кто осуществляет вызов.
     * 				Поле To - вызываемый номер внутренний или внешний.
     * 			
     * 
     * @param makeCallRequest
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "MakeCall", action = "http://172.23.102.4/welltime/wsdl/phone_call/MakeCall")
    @WebResult(name = "MakeCallResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "MakeCallResponse")
    public boolean makeCall(
        @WebParam(name = "MakeCallRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "MakeCallRequest")
        CallRequest makeCallRequest);

    /**
     * Подслушивающий звонок супервизор подключается к
     * 				звонящим и прослушивает телефонный звонок в реальном времени.
     * 				Использует тип CallRequest описывающий телефонный звонок.
     * 				Поле From - внутренний номер абонента, тот кто осуществляет вызов.
     * 				Поле To - вызываемый номер внутренний или внешний.
     * 			
     * 
     * @param spyCallRequest
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "SpyCall", action = "http://172.23.102.4/welltime/wsdl/phone_call/SpyCall")
    @WebResult(name = "SpyCallResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "SpyCallResponse")
    public boolean spyCall(
        @WebParam(name = "SpyCallRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "SpyCallRequest")
        CallRequest spyCallRequest);

    /**
     * Звонок подсказка, супервизор подключается к
     * 				звонящим и прослушивает телефонный звонок в реальном времени. При
     * 				этом он может комментировать звонок. Комментарии супервизора слышит
     * 				только оператор.
     * 				Использует тип CallRequest описывающий телефонный звонок.
     * 				Поле From - внутренний номер абонента, тот кто осуществляет вызов.
     * 				Поле To - номер абонента звонок которому нужно прослушать.
     * 			
     * 
     * @param helpCallRequest
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "HelpCall", action = "http://172.23.102.4/welltime/wsdl/phone_call/HelpCall")
    @WebResult(name = "HelpCallResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "HelpCallResponse")
    public boolean helpCall(
        @WebParam(name = "HelpCallRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "HelpCallRequest")
        CallRequest helpCallRequest);

    /**
     * Перехват звонка супервизор может перехватить
     * 				телефонный звонок идущий другому оператору.
     * 				Использует тип CallRequest описывающий телефонный звонок.
     * 				Поле From - внутренний номер абонента, тот кто осуществляет вызов.
     * 				Поле To - номер звонок на который нужно перехватить.
     * 			
     * 
     * @param pickUpCallRequest
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "PickUpCall", action = "http://172.23.102.4/welltime/wsdl/phone_call/PickUpCall")
    @WebResult(name = "PickUpCallResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "PickUpCallResponse")
    public String pickUpCall(
        @WebParam(name = "PickUpCallRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "PickUpCallRequest")
        CallRequest pickUpCallRequest);

    /**
     * Регистрация номера в очереди номером может быть
     * 				как агент так и порт
     * 				Использует QueueRegRequest
     * 				Тип описывающий операцию с очередью и номером телефонии
     * 				QueueNum - номер очереди
     * 				SubscriberNum - номер агента или порта
     * 				Penalty - опциональный параметр
     * 				Paused - опциональный параметр
     * 			
     * 
     * @param queueAddRequest
     * @return
     *     returns _4._102._23._172.welltime.wsdl.phone_call.CmdResponse
     */
    @WebMethod(operationName = "QueueAdd", action = "http://172.23.102.4/welltime/wsdl/phone_call/QueueAdd")
    @WebResult(name = "QueueAddResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "QueueAddResponse")
    public CmdResponse queueAdd(
        @WebParam(name = "QueueAddRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "QueueAddRequest")
        QueueRegRequest queueAddRequest);

    /**
     * Снятие регистрации номера в очереди в качестве
     * 				номера может быть как агент так и порт
     * 				Использует QueueRegRequest тип описывающий операцию с очередью и номером
     * 				телефонии
     * 				QueueNum - номер очереди
     * 				SubscriberNum - номер агента или порта
     * 				Penalty - опциональный параметр
     * 				Paused - опциональный параметр
     * 			
     * 
     * @param queueDelRequest
     * @return
     *     returns _4._102._23._172.welltime.wsdl.phone_call.CmdResponse
     */
    @WebMethod(operationName = "QueueDel", action = "http://172.23.102.4/welltime/wsdl/phone_call/QueueDel")
    @WebResult(name = "QueueDelResponse", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "QueueDelResponse")
    public CmdResponse queueDel(
        @WebParam(name = "QueueDelRequest", targetNamespace = "http://172.23.102.4/welltime/wsdl/phone_call/", partName = "QueueDelRequest")
        QueueRegRequest queueDelRequest);

}
